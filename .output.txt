?       blocowallet/cmd/blocowallet     [no test files]
?       blocowallet/internal/blockchain [no test files]
?       blocowallet/internal/constants  [no test files]
ok      blocowallet/internal/storage    0.754s
ok      blocowallet/internal/ui 1.301s
=== Config Initialization Test ===
‚úÖ Home directory: /Users/italo
‚úÖ App directory created: /Users/italo/.wallets-config-test
‚úÖ Configuration loaded successfully
   AppDir: /Users/italo/.wallets
   WalletsDir: /Users/italo/.wallets/keystore
   DatabasePath: /Users/italo/.wallets/wallets.db
‚úÖ Localization initialized successfully
   Label 'error_crypto_service_not_initialized': 'Crypto service not initialized'
   Label 'error_empty_password': 'Password cannot be empty'
   Label 'version': '0.2.0'
   Label 'welcome_message': 'Welcome to the BLOCO Wallet!
Select an option from the menu.'
‚úÖ CryptoService initialized successfully
‚úÖ Mnemonic encryption successful
‚úÖ Mnemonic decryption successful
‚úÖ All initialization steps completed successfully!
=== Config with Real Paths Test ===
Real app directory: /Users/italo/.wallets
‚úÖ Real app directory exists
‚úÖ Real configuration loaded
‚úÖ Real localization initialized
‚úÖ Real CryptoService initialized
‚úÖ Real mnemonic encryption works
‚úÖ Real application setup works correctly!
=== Error Messages Test ===
--- Without CryptoService ---
--- FAIL: TestErrorMessages (0.05s)
    config_debug_test.go:141:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/config_debug_test.go:141
                Error:          An error is expected but got nil.
                Test:           TestErrorMessages
--- FAIL: TestFinalIntegrationComplexPassword (4.20s)
    final_integration_test.go:47: üß™ Testing final integration with complex password keystore
    final_integration_test.go:48:    File: testdata/keystores/real_keystore_v3_complex_password.json
    final_integration_test.go:49:    Password: P@$$w0rd!123#ComplexPassword
    final_integration_test.go:50:    Expected Address: 0xF32f7C95CD7f616674Cb06d5E253CAC345E2722B
    --- FAIL: TestFinalIntegrationComplexPassword/Direct_ImportWalletFromKeystoreV3 (1.19s)
        final_integration_test.go:56:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/final_integration_test.go:56
                Error:          Received unexpected error:
                                Incorrect password or corrupted keystore file: MAC inv√°lido - senha incorreta ou arquivo corrompido
                Test:           TestFinalIntegrationComplexPassword/Direct_ImportWalletFromKeystoreV3
                Messages:       Direct import should succeed
    --- FAIL: TestFinalIntegrationComplexPassword/TUI_ImportWalletFromKeystore (1.16s)
        final_integration_test.go:75:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/final_integration_test.go:75
                Error:          Received unexpected error:
                                Incorrect password or corrupted keystore file: MAC inv√°lido - senha incorreta ou arquivo corrompido
                Test:           TestFinalIntegrationComplexPassword/TUI_ImportWalletFromKeystore
                Messages:       TUI import should succeed
    --- FAIL: TestFinalIntegrationComplexPassword/Method_Consistency (0.99s)
        final_integration_test.go:93:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/final_integration_test.go:93
                Error:          Received unexpected error:
                                Incorrect password or corrupted keystore file: MAC inv√°lido - senha incorreta ou arquivo corrompido
                Test:           TestFinalIntegrationComplexPassword/Method_Consistency
    final_integration_test.go:128: FAIL:        AddWallet(mock.anythingOfTypeArgument)
                        at: [/Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/final_integration_test.go:28]
    final_integration_test.go:128: FAIL: 1 out of 2 expectation(s) were met.
                The code you are testing needs to make 1 more call(s).
                at: [/Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/final_integration_test.go:128]
    final_integration_test.go:130: üéâ Final integration test completed successfully!
    final_integration_test.go:131:    ‚úÖ Direct method works
    final_integration_test.go:132:    ‚úÖ TUI method works
    final_integration_test.go:133:    ‚úÖ Both methods are consistent
    final_integration_test.go:134:    ‚úÖ Error handling works correctly
    final_integration_test.go:135:    ‚úÖ Universal KDF integration is complete
=== Keystore Password Debug ===
File: testdata/keystores/real_keystore_v3_complex_password.json
Size: 491 bytes
KDF Parameters:
  Salt: 53bb6abbe51fcda2c95a4f096d9fcc7e933fbdc62cfbde3a1de4327e658a88a6
  N: 262144
  R: 8
  P: 1
  DKLen: 32
Expected MAC: 9f8750c656d0a9278d4b2d902293ff1d4ad9bb508c1e86a9dd775727b6579531
--- Testing password 1: 'ComplexPassword123!@#' ---
‚úÖ SUCCESS with standard keystore decryption!
   Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
Generated new keystore:
Address: 0xcb3d531Acf7916EE52c42fF3404C1da9CE55201B
Path: /var/folders/zj/8_s3qxw5369gk9wqysltf9_40000gn/T/TestGenerateNewKeystoreForTesting2447387527/001/UTC--2025-08-15T03-01-05.022458000Z--cb3d531acf7916ee52c42ff3404c1da9ce55201b
Keystore content:
{"address":"cb3d531acf7916ee52c42ff3404c1da9ce55201b","crypto":{"cipher":"aes-128-ctr","ciphertext":"65467e60b4054107ec05315b7cb1eb181ed64d2400e2d38de8288048b0084da0","cipherparams":{"iv":"d44bee27a9edd2f035999fad19d3f181"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"71171c21349636e5d8b7635ed73e47992d3f58a841336bb8805ac0243622374d"},"mac":"f48faf0cb75429bc56c97df4ed16a158a1b119a6dda1b370fe2bfc176008de8d"},"id":"f1edfc29-8c52-451b-9f76-a5eecf25e895","version":3}
‚úÖ Successfully decrypted with password: ComplexPassword123!@#
Address matches: true
--- FAIL: TestImportWalletFromKeystoreV3WithUniversalKDF (1.79s)
    --- FAIL: TestImportWalletFromKeystoreV3WithUniversalKDF/Complex_Password_KeyStore (0.76s)
        keystore_universal_kdf_test.go:90:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/keystore_universal_kdf_test.go:90
                Error:          Received unexpected error:
                                Incorrect password or corrupted keystore file: MAC inv√°lido - senha incorreta ou arquivo corrompido
                Test:           TestImportWalletFromKeystoreV3WithUniversalKDF/Complex_Password_KeyStore
=== Simple Keystore Import Debug ===
File: testdata/keystores/real_keystore_v3_complex_password.json
Password: ComplexPassword123!@#
‚úÖ Direct keystore decryption successful
   Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
   Private Key Length: 32 bytes
   Private Key (hex): a07e79e422a8e09c57a2b9cb9027e6f31d08a1cd05b929309eb1c4b3510bff02
=== Testing Universal KDF Step by Step ===
‚úÖ Compatibility check passed
‚úÖ Keystore validation passed
‚úÖ Key derivation successful
   Derived Key Length: 32 bytes
   Derived Key (hex): b179cc88916b48ac773a3fec410a43c36175392e482a17e11af20d094ccb4957
‚úÖ MAC verification passed
‚úÖ Private key decryption successful
   Decrypted Key Length: 32 bytes
   Decrypted Key (hex): a07e79e422a8e09c57a2b9cb9027e6f31d08a1cd05b929309eb1c4b3510bff02
‚úÖ ECDSA conversion successful
=== Comparison ===
Direct decryption key:    a07e79e422a8e09c57a2b9cb9027e6f31d08a1cd05b929309eb1c4b3510bff02
Universal KDF key:        a07e79e422a8e09c57a2b9cb9027e6f31d08a1cd05b929309eb1c4b3510bff02
Keys match: true
Direct address:    0x12fabDE135359Fa5a442cb01b48F254D6c62e995
Universal address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
Addresses match: true
‚úÖ All tests passed!
=== TUI Condition Debug ===
Estado da TUI simulado:
  mnemonic: 'testdata/keystores/real_keystore_v3_complex_password.json'
  privateKeyInput.Value(): ''
  currentView: 'ImportWalletPasswordView'
Testando condi√ß√µes:
  Condi√ß√£o 1 (private key): false
    currentView == 'ImportWalletPasswordView': true
    len(privateKeyInput.Value()) > 0: false (len=0)
  Condi√ß√£o 2 (keystore): true
    mnemonic != '': true
    currentView == 'ImportWalletPasswordView': true
  Condi√ß√£o 3 (mnemonic - else): false
Resultado:
  ‚úÖ Chamaria ImportWalletFromKeystore() - CORRETO!
=== TUI Condition with Real Constants ===
Poss√≠vel problema: privateKeyInput pode estar sendo reutilizado
  1. initImportKeystore() usa privateKeyInput para o caminho
  2. updateImportKeystore() armazena caminho em mnemonic
  3. Mas privateKeyInput pode ainda conter o caminho?
Se privateKeyInput cont√©m o caminho:
  privateKeyInput.Value(): 'testdata/keystores/real_keystore_v3_complex_password.json'
  len(privateKeyInput.Value()) > 0: true
  Condi√ß√£o 1 (private key): true
  ‚ùå Chamaria ImportWalletFromPrivateKey() com o CAMINHO do arquivo!
      Isso causaria 'invalid private key format' porque:
      - Tentaria usar o caminho como chave privada
      - Verificaria se len(privateKeyHex) != 64
      - Caminho tem 57 caracteres, n√£o 64
      - Retornaria 'invalid private key format'
=== TUI Debug with Detailed Logging ===
‚úÖ CryptoService initialized
--- Testing Complex Password ---
File: testdata/keystores/real_keystore_v3_complex_password.json
Password: ComplexPassword123!@#
‚úÖ File read: 491 bytes
‚úÖ Direct keystore decryption successful: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
‚úÖ ImportWalletFromKeystore successful!
   Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
   Path: /Users/italo/.wallets/keystore/0x12fabDE135359Fa5a442cb01b48F254D6c62e995.json
--- Testing Simple Password ---
File: testdata/keystores/real_keystore_v3_simple_password.json
Password: password123
‚ùå File not found, skipping
=== Debug Specific Error Scenarios ===
--- Test 1: Without CryptoService ---
‚ùå Unexpected success without CryptoService
--- Test 2: With CryptoService ---
‚úÖ CryptoService initialized
‚úÖ Success with CryptoService
=== TUI Exact Simulation Test ===
‚úÖ CryptoService initialized
‚úÖ KeyStore created at: /var/folders/zj/8_s3qxw5369gk9wqysltf9_40000gn/T/TestTUIExactSimulation1832221192/001/keystore
‚úÖ WalletService created
‚úÖ File exists: testdata/keystores/real_keystore_v3_complex_password.json
‚úÖ File size OK: 491 bytes
‚úÖ Keystore path stored in mnemonic field: testdata/keystores/real_keystore_v3_complex_password.json
‚úÖ Password trimmed: 'ComplexPassword123!@#'
‚úÖ Password validation passed
‚úÖ Using keystore import method
   Name: Imported Keystore Wallet
   Keystore Path: testdata/keystores/real_keystore_v3_complex_password.json
‚úÖ ImportWalletFromKeystore successful!
   Wallet Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
   Keystore Path: /Users/italo/.wallets/keystore/0x12fabDE135359Fa5a442cb01b48F254D6c62e995.json
   Import Method: keystore
   Has Mnemonic: true
   KDF Type: scrypt
   KDF Security Level: Medium
‚úÖ TUI Exact Simulation completed successfully!
=== TUI Real Application Test ===
‚úÖ Using real application directories:
   App Dir: /Users/italo/.wallets
   Keystore Dir: /Users/italo/.wallets/keystore
‚úÖ CryptoService initialized with real config
‚úÖ Real application test successful!
   Wallet Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
   Keystore Path: /Users/italo/.wallets/keystore/0x12fabDE135359Fa5a442cb01b48F254D6c62e995.json
=== TUI Flow Debug Test ===
Keystore Path: testdata/keystores/real_keystore_v3_complex_password.json
Password: ComplexPassword123!@#
Name: Test Keystore Import
‚úÖ File exists
‚úÖ File size: 491 bytes
‚úÖ File read successfully, 491 bytes
‚úÖ JSON parsing successful
‚úÖ Crypto section found
‚úÖ KDF type: scrypt
=== Calling ImportWalletFromKeystore ===
‚úÖ ImportWalletFromKeystore successful
   Wallet Address: 0x12fabDE135359Fa5a442cb01b48F254D6c62e995
   Keystore Path: /Users/italo/.wallets/keystore/0x12fabDE135359Fa5a442cb01b48F254D6c62e995.json
‚úÖ Test completed successfully
=== Testing Complex Password Keystore ===
‚úÖ Complex Password Keystore import successful
=== Testing Simple Password Keystore ===
Password validation error: Password must have at least 8 characters
Password validation error: Password must have at least 8 characters
--- FAIL: TestTUIPasswordValidation (0.00s)
    --- FAIL: TestTUIPasswordValidation/Password_password123 (0.00s)
        tui_flow_debug_test.go:215:
                Error Trace:    /Users/italo/Projects/lab/wallet/bloco-wallet-manager/internal/wallet/tui_flow_debug_test.go:215
                Error:          Should be true
                Test:           TestTUIPasswordValidation/Password_password123
                Messages:       Password should be valid: password123
üîß UNIVERSAL KDF COMPATIBILITY DEMONSTRATION
============================================================
1. üß™ Testing: Geth Standard (Ethereum Geth)
--------------------------------------------------
‚úÖ Compatible: true
üîë KDF: scrypt ‚Üí scrypt
üõ°Ô∏è  Security: Medium
üéØ Key Features:
   ‚Ä¢ Standard JSON float64 parameters
   ‚Ä¢ Lowercase parameter names
   ‚Ä¢ Standard scrypt configuration
‚ö†Ô∏è Analysis:
   ‚Ä¢ Par√¢metros validados com sucesso
üí° Security Recommendations:
   ‚Ä¢ Seguran√ßa adequada para uso geral
   ‚Ä¢ ‚ö†Ô∏è Usando par√¢metros padr√£o - considere personaliza√ß√£o para aplica√ß√µes de alto valor
2. üß™ Testing: MetaMask Variant (MetaMask Browser Extension)
--------------------------------------------------
‚úÖ Compatible: true
üîë KDF: Scrypt ‚Üí scrypt
üõ°Ô∏è  Security: Medium
üéØ Key Features:
   ‚Ä¢ Case variation in KDF name (Scrypt vs scrypt)
   ‚Ä¢ Mixed parameter types (string, int, float)
   ‚Ä¢ CamelCase parameter names (dkLen, Salt)
‚ö†Ô∏è Analysis:
   ‚Ä¢ Par√¢metros validados com sucesso
üí° Security Recommendations:
   ‚Ä¢ Seguran√ßa adequada para uso geral
   ‚Ä¢ ‚ö†Ô∏è Usando par√¢metros padr√£o - considere personaliza√ß√£o para aplica√ß√µes de alto valor
3. üß™ Testing: Trust Wallet Mobile (Trust Wallet Mobile App)
--------------------------------------------------
‚úÖ Compatible: true
üîë KDF: SCRYPT ‚Üí scrypt
üõ°Ô∏è  Security: Medium
üéØ Key Features:
   ‚Ä¢ Uppercase KDF name (SCRYPT)
   ‚Ä¢ Alternative parameter names (cost, blocksize, parallel)
   ‚Ä¢ Different security level (lower N parameter)
‚ö†Ô∏è Analysis:
   ‚Ä¢ Par√¢metros validados com sucesso
üí° Security Recommendations:
   ‚Ä¢ Seguran√ßa adequada para uso geral
   ‚Ä¢ ‚ö†Ô∏è Usando par√¢metros padr√£o - considere personaliza√ß√£o para aplica√ß√µes de alto valor
4. üß™ Testing: PBKDF2 Ledger (Ledger Hardware Wallet)
--------------------------------------------------
‚úÖ Compatible: true
üîë KDF: pbkdf2 ‚Üí pbkdf2
üõ°Ô∏è  Security: Medium
üéØ Key Features:
   ‚Ä¢ Different KDF algorithm (PBKDF2 vs Scrypt)
   ‚Ä¢ Different parameter set (c, prf vs n, r, p)
   ‚Ä¢ SHA-256 hash function specification
‚ö†Ô∏è Analysis:
   ‚Ä¢ Par√¢metros validados com sucesso
üí° Security Recommendations:
   ‚Ä¢ PBKDF2 menos resistente que scrypt contra ataques GPU
============================================================
üéØ UNIVERSAL KDF ACHIEVEMENTS:
‚úÖ Supports multiple KDF algorithms (scrypt, pbkdf2, variations)
‚úÖ Handles different JSON data types (int, float64, string, json.Number)
‚úÖ Recognizes parameter name variations (case-insensitive, alternatives)
‚úÖ Provides automatic security analysis and recommendations
‚úÖ Maintains compatibility with 95%+ of KeyStore V3 files
‚úÖ Extensible architecture for future KDF algorithms
üìä COMPATIBILITY COMPARISON:
Aspect               | Before          | After
-------------------------------------------------------
KeyStore Support     | ~60%            | ~95%
JSON Types           | float64 only    | All types
Parameter Names      | Fixed           | Flexible
KDF Algorithms       | 2 variants      | 6+ variants
Security Analysis    | None            | Automatic
Error Handling       | Generic         | Specific
üîÑ PARAMETER CONVERSION DEMONSTRATION
=============================================
üìã Standard Geth (float64)
   JSON unmarshaling typically produces float64
   Input: map[dklen:32 n:262144 p:1 r:8]
   Extracted: n=262144, r=8, p=1, dklen=32
   ‚úÖ Successfully converted all parameters
üìã Mixed Types
   Real-world keystores often have mixed types
   Input: map[dklen:32 n:262144 p:1 r:8]
   Extracted: n=262144, r=8, p=1, dklen=32
   ‚úÖ Successfully converted all parameters
üìã Alternative Names
   Different wallet providers use different naming
   Input: map[N:262144 P:1 R:8 dkLen:32]
   Extracted: n=262144, r=8, p=1, dklen=32
   ‚úÖ Successfully converted all parameters
FAIL
FAIL    blocowallet/internal/wallet     51.795s
?       blocowallet/pkg/config  [no test files]
--- FAIL: TestGetKeystoreErrorMessage (0.00s)
    --- FAIL: TestGetKeystoreErrorMessage/Unknown_error_key (0.00s)
        keystore_messages_test.go:72: GetKeystoreErrorMessage("unknown_error") = "Error desconocido", want "unknown_error"
FAIL
FAIL    blocowallet/pkg/localization    2.247s
?       blocowallet/pkg/logger  [no test files]
FAIL
